<?phpnamespace Admin\Controller;class TradeController extends AdminController{	public function index($field = NULL, $name = NULL, $market = NULL, $status = NULL)	{		$this->checkUpdata();		$where = array();		if ($field && $name) {			if ($field == 'username') {				$where['userid'] = M('User')->where(array('username' => $name))->getField('id');			}			else {				$where[$field] = $name;			}		}		if ($market) {			$where['market'] = $market;		}		if ($status) {			$where['status'] = $status;		}		$count = M('Trade')->where($where)->count();		$Page = new \Think\Page($count, 15);		$show = $Page->show();		$list = M('Trade')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['username'] = M('User')->where(array('id' => $v['userid']))->getField('moble');		}		$this->assign('list', $list);		$this->assign('page', $show);		$this->display();	}	public function chexiao($id = NULL)	{		$rs = D('Trade')->chexiao($id);		if ($rs[0]) {			$this->success($rs[1]);		}		else {			$this->error($rs[1]);		}	}	public function log($field = NULL, $name = NULL, $market = NULL)	{		$where = array();		if ($field && $name) {			if ($field == 'username') {				$where['userid'] = M('User')->where(array('username' => $name))->getField('id');			}			else if ($field == 'peername') {				$where['peerid'] = M('User')->where(array('username' => $name))->getField('id');			}			else {				$where[$field] = $name;			}		}		if ($market) {			$where['market'] = $market;		}		$count = M('TradeLog')->where($where)->count();		$Page = new \Think\Page($count, 15);		$show = $Page->show();		$list = M('TradeLog')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['username'] = M('User')->where(array('id' => $v['userid']))->getField('moble');			$list[$k]['peername'] = M('User')->where(array('id' => $v['peerid']))->getField('moble');		}		$this->assign('list', $list);		$this->assign('page', $show);		$this->display();	}	public function chat($field = NULL, $name = NULL)	{		$where = array();		if ($field && $name) {			if ($field == 'username') {				$where['userid'] = M('User')->where(array('username' => $name))->getField('id');			}			else {				$where[$field] = $name;			}		}		$count = M('Chat')->where($where)->count();		$Page = new \Think\Page($count, 15);		$show = $Page->show();		$list = M('Chat')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['username'] = M('User')->where(array('id' => $v['userid']))->getField('username');		}		$this->assign('list', $list);		$this->assign('page', $show);		$this->display();	}	public function chatStatus($id = NULL, $type = NULL, $moble = 'Chat')	{		if (APP_DEMO) {			$this->error('测试站暂时不能修改！');		}		if (empty($id)) {			$this->error('参数错误！');		}		if (empty($type)) {			$this->error('参数错误1！');		}		if (strpos(',', $id)) {			$id = implode(',', $id);		}		$where['id'] = array('in', $id);		switch (strtolower($type)) {		case 'forbid':			$data = array('status' => 0);			break;		case 'resume':			$data = array('status' => 1);			break;		case 'repeal':			$data = array('status' => 2, 'endtime' => time());			break;		case 'delete':			$data = array('status' => -1);			break;		case 'del':			if (M($moble)->where($where)->delete()) {				$this->success('操作成功！');			}			else {				$this->error('操作失败！');			}			break;		default:			$this->error('操作失败！');		}		if (M($moble)->where($where)->save($data)) {			$this->success('操作成功！');		}		else {			$this->error('操作失败！');		}	}	public function comment($field = NULL, $name = NULL, $coinname = NULL)	{		$where = array();		if ($field && $name) {			if ($field == 'username') {				$where['userid'] = M('User')->where(array('username' => $name))->getField('id');			}			else {				$where[$field] = $name;			}		}		if ($coinname) {			$where['coinname'] = $coinname;		}		$count = M('CoinComment')->where($where)->count();		$Page = new \Think\Page($count, 15);		$show = $Page->show();		$list = M('CoinComment')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['username'] = M('User')->where(array('id' => $v['userid']))->getField('username');		}		$this->assign('list', $list);		$this->assign('page', $show);		$this->display();	}	public function commentStatus($id = NULL, $type = NULL, $moble = 'CoinComment')	{		if (APP_DEMO) {			$this->error('测试站暂时不能修改！');		}		if (empty($id)) {			$this->error('参数错误！');		}		if (empty($type)) {			$this->error('参数错误1！');		}		if (strpos(',', $id)) {			$id = implode(',', $id);		}		$where['id'] = array('in', $id);		switch (strtolower($type)) {		case 'forbid':			$data = array('status' => 0);			break;		case 'resume':			$data = array('status' => 1);			break;		case 'repeal':			$data = array('status' => 2, 'endtime' => time());			break;		case 'delete':			$data = array('status' => -1);			break;		case 'del':			if (M($moble)->where($where)->delete()) {				$this->success('操作成功！');			}			else {				$this->error('操作失败！');			}			break;		default:			$this->error('操作失败！');		}		if (M($moble)->where($where)->save($data)) {			$this->success('操作成功！');		}		else {			$this->error('操作失败！');		}	}	public function market($field = NULL, $name = NULL)	{		$where = array();		if ($field && $name) {			if ($field == 'username') {				$where['userid'] = M('User')->where(array('username' => $name))->getField('id');			}			else {				$where[$field] = $name;			}		}		$count = M('Market')->where($where)->count();		$Page = new \Think\Page($count, 15);		$show = $Page->show();		$list = M('Market')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();		$this->assign('list', $list);		$this->assign('page', $show);		$this->display();	}	public function marketEdit($id = NULL)	{		if (empty($_POST)) {			if (empty($id)) {				$this->data = array();			}			else {				$this->data = M('Market')->where(array('id' => $id))->find();			}			$this->display();		}		else {			if (APP_DEMO) {				$this->error('测试站暂时不能修改！');			}			$round = array(0, 1, 2, 3, 4, 5, 6);			if (!in_array($_POST['round'], $round)) {				$this->error('小数位数格式错误！');			}			if ($_POST['id']) {				$rs = M('Market')->save($_POST);			}			else {				$_POST['name'] = $_POST['sellname'] . '_' . $_POST['buyname'];				unset($_POST['buyname']);				unset($_POST['sellname']);				if (M('Market')->where(array('name' => $_POST['name']))->find()) {					$this->error('市场存在！');				}				$rs = M('Market')->add($_POST);			}			if ($rs) {				$this->success('操作成功！');			}			else {				$this->error('操作失败！');			}		}	}	public function marketStatus($id = NULL, $type = NULL, $moble = 'Market')	{		if (APP_DEMO) {			$this->error('测试站暂时不能修改！');		}		if (empty($id)) {			$this->error('参数错误！');		}		if (empty($type)) {			$this->error('参数错误1！');		}		if (strpos(',', $id)) {			$id = implode(',', $id);		}		$where['id'] = array('in', $id);		switch (strtolower($type)) {		case 'forbid':			$data = array('status' => 0);			break;		case 'resume':			$data = array('status' => 1);			break;		case 'repeal':			$data = array('status' => 2, 'endtime' => time());			break;		case 'delete':			$data = array('status' => -1);			break;		case 'del':			if (M($moble)->where($where)->delete()) {				$this->success('操作成功！');			}			else {				$this->error('操作失败！');			}			break;		default:			$this->error('操作失败！');		}		if (M($moble)->where($where)->save($data)) {			$this->success('操作成功！');		}		else {			$this->error('操作失败！');		}	}	public function invit($field = NULL, $name = NULL)	{		$where = array();		if ($field && $name) {			if ($field == 'username') {				$where['userid'] = M('User')->where(array('username' => $name))->getField('id');			}			else {				$where[$field] = $name;			}		}		$count = M('Invit')->where($where)->count();		$Page = new \Think\Page($count, 15);		$show = $Page->show();		$list = M('Invit')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['username'] = M('User')->where(array('id' => $v['userid']))->getField('moble');			$list[$k]['invit'] = M('User')->where(array('id' => $v['invit']))->getField('moble');		}		$this->assign('list', $list);		$this->assign('page', $show);		$this->display();	}	public function checkUpdata()	{		if (!S(MODULE_NAME . CONTROLLER_NAME . 'checkUpdata')) {			$list = M('Menu')->where(array(				'url' => 'Trade/index',				'pid' => array('neq', 0)				))->select();			if ($list[1]) {				M('Menu')->where(array('id' => $list[1]['id']))->delete();			}			else if (!$list) {				M('Menu')->add(array('url' => 'Trade/index', 'title' => '委托管理', 'pid' => 5, 'sort' => 1, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			else {				M('Menu')->where(array(					'url' => 'Trade/index',					'pid' => array('neq', 0)					))->save(array('title' => '委托管理', 'pid' => 5, 'sort' => 1, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			$list = M('Menu')->where(array(				'url' => 'Trade/log',				'pid' => array('neq', 0)				))->select();			if ($list[1]) {				M('Menu')->where(array('id' => $list[1]['id']))->delete();			}			else if (!$list) {				M('Menu')->add(array('url' => 'Trade/log', 'title' => '成交记录', 'pid' => 5, 'sort' => 2, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			else {				M('Menu')->where(array(					'url' => 'Trade/log',					'pid' => array('neq', 0)					))->save(array('title' => '成交记录', 'pid' => 5, 'sort' => 2, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			$list = M('Menu')->where(array(				'url' => 'Trade/chat',				'pid' => array('neq', 0)				))->select();			if ($list[1]) {				M('Menu')->where(array('id' => $list[1]['id']))->delete();			}			else if (!$list) {				M('Menu')->add(array('url' => 'Trade/chat', 'title' => '交易聊天', 'pid' => 5, 'sort' => 3, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			else {				M('Menu')->where(array(					'url' => 'Trade/chat',					'pid' => array('neq', 0)					))->save(array('title' => '交易聊天', 'pid' => 5, 'sort' => 3, 'hide' => 1, 'group' => '交易', 'ico_name' => 'stats'));			}			$list = M('Menu')->where(array(				'url' => 'Trade/comment',				'pid' => array('neq', 0)				))->select();			if ($list[1]) {				M('Menu')->where(array('id' => $list[1]['id']))->delete();			}			else if (!$list) {				M('Menu')->add(array('url' => 'Trade/comment', 'title' => '币种评论', 'pid' => 5, 'sort' => 4, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			else {				M('Menu')->where(array(					'url' => 'Trade/comment',					'pid' => array('neq', 0)					))->save(array('title' => '币种评论', 'pid' => 5, 'sort' => 4, 'hide' => 1, 'group' => '交易', 'ico_name' => 'stats'));			}			$list = M('Menu')->where(array(				'url' => 'Trade/market',				'pid' => array('neq', 0)				))->select();			if ($list[1]) {				M('Menu')->where(array('id' => $list[1]['id']))->delete();			}			else if (!$list) {				M('Menu')->add(array('url' => 'Trade/market', 'title' => '交易市场', 'pid' => 5, 'sort' => 5, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			else {				M('Menu')->where(array(					'url' => 'Trade/market',					'pid' => array('neq', 0)					))->save(array('title' => '交易市场', 'pid' => 5, 'sort' => 5, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			$list = M('Menu')->where(array(				'url' => 'Trade/invit',				'pid' => array('neq', 0)				))->select();			if ($list[1]) {				M('Menu')->where(array('id' => $list[1]['id']))->delete();			}			else if (!$list) {				M('Menu')->add(array('url' => 'Trade/invit', 'title' => '交易推荐', 'pid' => 5, 'sort' => 6, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			else {				M('Menu')->where(array(					'url' => 'Trade/invit',					'pid' => array('neq', 0)					))->save(array('title' => '交易推荐', 'pid' => 5, 'sort' => 6, 'hide' => 0, 'group' => '交易', 'ico_name' => 'stats'));			}			if (M('Menu')->where(array('url' => 'Chat/index'))->delete()) {				M('AuthRule')->where(array('status' => 1))->delete();			}			if (M('Menu')->where(array('url' => 'Tradelog/index'))->delete()) {				M('AuthRule')->where(array('status' => 1))->delete();			}			S(MODULE_NAME . CONTROLLER_NAME . 'checkUpdata', 1);		}	}	public function seeklist($field = NULL, $name = NULL){        $where = array();        if ($field && $name) {            if ($field == 'username') {                $where['userid'] = M('User')->where(array('username' => $name))->getField('id');            }            else {                $where[$field] = $name;            }        }        $count = M('Seekmarket')->where($where)->count();        $Page = new \Think\Page($count, 15);        $show = $Page->show();        $list = M('Seekmarket')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function seekEdit($id = NULL)    {        if (empty($_POST)) {            if (empty($id)) {                $this->data = array();            }            else {                $this->data = M('Seekmarket')->where(array('id' => $id))->find();            }            $this->display();        }        else {            if (APP_DEMO) {                $this->error('测试站暂时不能修改！');            }            $round = array(0, 1, 2, 3, 4, 5, 6);            if (!in_array($_POST['round'], $round)) {                $this->error('小数位数格式错误！');            }            if ($_POST['id']) {                $rs = M('Seekmarket')->save($_POST);            }            else {                $_POST['name'] = $_POST['sellname'] . '_' . $_POST['buyname'];                if (M('Seekmarket')->where(array('name' => $_POST['name']))->find()) {                    $this->error('市场存在！');                }                $rs = M('Seekmarket')->add($_POST);            }            if ($rs) {                $this->success('操作成功！');            }            else {                $this->error('操作失败！');            }        }    }    public function seekStatus($id = NULL, $type = NULL, $moble = 'Seekmarket')    {        if (APP_DEMO) {            $this->error('测试站暂时不能修改！');        }        if (empty($id)) {            $this->error('参数错误！');        }        if (empty($type)) {            $this->error('参数错误1！');        }        if (strpos(',', $id)) {            $id = implode(',', $id);        }        $where['id'] = array('in', $id);        switch (strtolower($type)) {            case 'forbid':                $data = array('status' => 0);                break;            case 'resume':                $data = array('status' => 1);                break;            case 'repeal':                $data = array('status' => 2, 'endtime' => time());                break;            case 'delete':                $data = array('status' => -1);                break;            case 'del':                if (M($moble)->where($where)->delete()) {                    $this->success('操作成功！');                }                else {                    $this->error('操作失败！');                }                break;            default:                $this->error('操作失败！');        }        if (M($moble)->where($where)->save($data)) {            $this->success('操作成功！');        }        else {            $this->error('操作失败！');        }    }    public function seek($field = NULL, $name = NULL, $market = NULL, $status = NULL)    {        $marketlist= M('Seekmarket')->select();        $this->checkUpdata();        $where = array();        if ($field && $name) {            if ($field == 'username') {                $where['userid'] = M('User')->where(array('username' => $name))->getField('id');            }            else {                $where[$field] = $name;            }        }        if ($market) {            $where['market'] = $market;        }        if ($status) {            $where['status'] = $status;        }        $count = M('seekLog')->where($where)->count();        $Page = new \Think\Page($count, 15);        $show = $Page->show();        $list = M('seekLog')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['username'] = M('User')->where(array('id' => $v['userid']))->getField('moble');            $list[$k]['peername'] = M('User')->where(array('id' => $v['peerid']))->getField('moble');        }        $this->assign('market', $marketlist);        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function seeklog_status ($id,$action){        if($action=='chexiao'){            if (!check($id, 'd')) {                $this->error('请选择要撤销的委托！');            }            $seek = M('seekLog')->where(array('id' => $id))->find();            if (!$seek) {                $this->error('撤销委托参数错误！');            }            if ($seek['userid'] != userid()) {                $this->error('参数非法！');            }            $rs = D('Trade')->seekchexiao($id);            if ($rs[0]) {                $this->success($rs[1]);            }            else {                $this->error($rs[1]);            }        }        if($action=='chuli'){            $rs = M('seekLog')->where("id=$id")->save(array('status'=>5));            if ($rs) {                $this->success("请及时联系双方");            }            else {                $this->error("处理失败");            }        }        if($action=='wancheng'){            $seek=M('SeekLog')->where('id='.$id)->find();            $market=$seek['market'];            $data=M('seekmarket')->where(array("market"=>$market))->find();            $user=M('UserCoin')->where(array("userid"=>userid()))->find();            if(!$data) {                $this->error('交易市场错误');            }else {                $xnb = explode('_', $market)[0];                $rmb = explode('_', $market)[1];            }            M()->startTrans();           $finance = M('finance')->where(array('userid' => userid()))->order('id desc')->find();//最近一条资金记录            $finance_num_user_coin = M('UserCoin')->where(array('userid' => userid()))->find();//个人资产            $re[] =$finance_nameid= D('seekLog')->where("id=$id")->save(array('status'=>3));            $mum_sell=$seek['price']*$seek['num']/100*(100-$data['fee_sell']);            $re[]=M('UserCoin')->where(array("userid"=>$seek['userid']))->setDec('goldd',$seek['mum']);            $re[]=M('UserCoin')->where(array("userid"=>$seek['peerid']))->setInc('gold',$mum_sell);            $finance_mum_user_coin = M('UserCoin')->where(array('userid' => userid()))->find();            $finance_hash = md5(userid() . $finance_num_user_coin[$rmb ] . $finance_num_user_coin[$rmb.'d'] .                $seek['mum'] . $finance_mum_user_coin[$rmb] . $finance_mum_user_coin[$rmb . 'd'] . MSCODE . 'auth.btchanges.com');//			人民币总资产            $finance_num = $finance_num_user_coin[$rmb] + $finance_num_user_coin[$rmb . 'd'];            if ($finance['mum'] < $finance_num) {                $finance_status = (1 < ($finance_num - $finance['mum']) ? 0 : 1);//正常1 错误0            }else {                $finance_status = (1 < ($finance['mum'] - $finance_num) ? 0 : 1);            }            $rs[] =  M('finance')->add(array('userid' => userid(),                'coinname' => $rmb , 'num_a' => $finance_num_user_coin[$rmb], 'num_b' => $finance_num_user_coin[$rmb . 'd'],                'num' => $finance_num_user_coin[$rmb] + $finance_num_user_coin[$rmb . 'd'], 'fee' => $seek['mum'], 'type' => 2,                'name' => 'seek', 'nameid' => $finance_nameid, 'remark' => '推荐大厅-发布求购' . $market,                'mum_a' => $finance_mum_user_coin[$rmb], 'mum_b' => $finance_mum_user_coin[$rmb . 'd'],                'mum' => $finance_mum_user_coin[$rmb] + $finance_mum_user_coin[$rmb . 'd'], 'move' => $finance_hash,                'addtime' => time(), 'status' => $finance_status));            if ($re) {                    M()->commit();                $this->success("处理完成,交易成功");            }            else {                M()->rollback();                $this->error("处理失败");            }        }    }    public function seek_log($field = NULL, $name = NULL, $market = NULL)    {        $marketlist= M('Seekmarket')->select();        $where = array();        if ($field && $name) {            if ($field == 'username') {                $where['userid'] = M('User')->where(array('username' => $name))->getField('id');            }            else if ($field == 'peername') {                $where['peerid'] = M('User')->where(array('username' => $name))->getField('id');            }            else {                $where[$field] = $name;            }        }        if ($market) {            $where['market'] = $market;        }        $where['status']=3;        $count = M('seekLog')->where($where)->count();        $Page = new \Think\Page($count, 15);        $show = $Page->show();        $list = M('seekLog')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['username'] = M('User')->where(array('id' => $v['userid']))->getField('moble');            $list[$k]['peername'] = M('User')->where(array('id' => $v['peerid']))->getField('moble');        }        $this->assign('market', $marketlist);        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function repurchase(){	    if($_POST){            $rs = M('Config')->where("id=1")->save($_POST);            if ($rs) {                $this->success("设置成功");            }            else {                $this->error("设置失败");            }        }	    $this->display();    }    public function repurchaselist($field= NULL, $name = NULL){        $where = array();        if ($field && $name) {            if ($field == 'username') {                $where['userid'] = M('User')->where(array('username' => $name))->getField('id');            }            else {                $where[$field] = $name;            }        }        $count = M('repurchase')->where($where)->count();        $Page = new \Think\Page($count, 15);        $show = $Page->show();        $list = M('repurchase')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['username'] = M('User')->where(array('id' => $v['userid']))->getField('moble');        }        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }}?>