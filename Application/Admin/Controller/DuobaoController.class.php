<?phpnamespace Admin\Controller;class DuobaoController extends AdminController{	public function index($name = NULL)	{        if ($name) {            $where['userid'] = M('User')->where(array('username' => $name))->getField('id');        }        else {            $where = array();        }        $count = M('lotteryLog')->where($where)->count();        $Page = new \Think\Page($count, 15);        $show = $Page->show();        $list = M('lotteryLog')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['username'] = M('User')->where(array('id' => $v['userid']))->getField('moble');        }        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();	}    public function config($name = NULL, $field = NULL, $status = NULL)    {        $where = array();        if ($field && $name) {            if ($field == 'username') {                $where['userid'] = M('User')->where(array('username' => $name))->getField('id');            }            else {                $where[$field] = $name;            }        }        if ($status) {            $where['status'] = $status - 1;        }        $count = M('lotteryConfig')->where($where)->count();        $Page = new \Think\Page($count, 15);        $show = $Page->show();        $list = M('lotteryConfig')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        $arr=M('lotteryConfig')->field('type,poss,count(type) as count')->group('type')->select();        foreach ($arr as $k=>$v){            $num[$v['type']]=$v['count']*$v['poss'];            $this->assign($v['type'], $num[$v['type']]);        }        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function edit($id = NULL)    {        if (empty($_POST)) {            if (empty($id)) {                $this->data = array();            }            else {                $this->data = M('lotteryConfig')->where(array('id' => trim($_GET['id'])))->find();            }            $this->display();        }else {            if (APP_DEMO) {                $this->error('测试站暂时不能修改！');            }            if ($_POST['id']) {                $rs = M('lotteryConfig')->save($_POST);            } else {                $_POST['addtime'] = time();                $_POST['status'] = 1;                $rs = M('lotteryConfig')->add($_POST);            }            if ($rs) {                $this->success('操作成功！');            }            else {                $this->error('数据未修改！');            }        }    }    public function Status()    {        if (APP_DEMO) {            $this->error('测试站暂时不能修改！');        }        if (IS_POST) {            $id = array();            $id = implode(',', $_POST['id']);        }        else {            $id = $_GET['id'];        }        if (empty($id)) {            $this->error('请选择要操作的数据!');        }        $where['id'] = array('in', $id);        $method = $_GET['type'];        switch (strtolower($method)) {            case 'forbid':                $data = array('status' => 0);                break;            case 'resume':                $data = array('status' => 1);                break;            case 'delete':                if (M('lotteryConfig')->where($where)->delete()) {                    $this->success('操作成功！');                }                else {                    $this->error('操作失败！');                }                break;            default:                $this->error('参数非法');        }        if (M('lotteryConfig')->where($where)->save($data)) {            $this->success('操作成功！');        }        else {            $this->error('操作失败！');        }    }    public function Image()    {        $upload = new \Think\Upload();        $upload->maxSize = 3145728;        $upload->exts = array('jpg', 'gif', 'png', 'jpeg');        $upload->rootPath = './Upload/duobao/';        $upload->autoSub = false;        $info = $upload->upload();        foreach ($info as $k => $v) {            $path = $v['savepath'] . $v['savename'];            echo $path;            exit();        }    }    public function diamondsend(){	    $red=M('lotteryMax')->where(array('name'=>'red'))->find();        $blue=M('lotteryMax')->where(array('name'=>'blue'))->find();        $gold=M('lotteryMax')->where(array('name'=>'gold'))->find();        $list=M('lotteryMax')->select();        $this->assign('list', $list);        $this->assign('gold', $gold);        $this->assign('blue', $blue);        $this->assign('red', $red);        $this->display();    }    public function maxEdit(){       if($_POST['redid']&&$_POST['blueid']){           $map['id']=$_POST['redid'];           $map['mum']=$_POST['redmum'];           $map['num']=$_POST['rednum'];           $map['price']=($_POST['redmum']/$_POST['rednum']);           $map['savetime']=time();           $data['id']=$_POST['blueid'];           $data['mum']=$_POST['bluemum'];           $data['num']=$_POST['bluenum'];           $data['price']=($_POST['bluemum']/$_POST['bluenum']);           $arr['id']=$_POST['goldid'];           $arr['mum']=$_POST['goldmum'];           $arr['num']=$_POST['goldnum'];           $arr['price']=($_POST['goldmum']/$_POST['goldnum']);           $arr['savetime']=time();           M()->startTrans();           $re[]=M('lotteryMax')->save($map);           $re[]=M('lotteryMax')->save($data);           $re[]=M('lotteryMax')->save($arr);           $re[]=M('lotteryConfig')->where(array('type'=>'red'))->save(array('num'=>$map['price']));           $re[]=M('lotteryConfig')->where(array('type'=>'blue'))->save(array('num'=> $data['price']));           $re[]=M('lotteryConfig')->where(array('type'=>'gold'))->save(array('num'=> $arr['price']));           if($re){               M()->commit();               $this->success('修改成功');           }else{               M()->rollback();               $this->error('修改失败');           }       }else{           $map['name']='red';           $map['mum']=$_POST['redmum'];           $map['num']=$_POST['rednum'];           $map['price']=($_POST['redmum']/$_POST['rednum']);           $map['savetime']=time();           $data['name']='blue';           $data['mum']=$_POST['bluemum'];           $data['num']=$_POST['bluenum'];           $data['price']=($_POST['bluemum']/$_POST['bluenum']);           $data['savetime']=time();           M()->startTrans();           $re[]=M('lotteryMax')->add($map);           $re[]=M('lotteryMax')->add($data);           $re[]=M('lotteryConfig')->where(array('type'=>'red'))->save(array('num'=>$map['price']));           $re[]=M('lotteryConfig')->where(array('type'=>'blue'))->save(array('num'=> $data['price']));            if($re){                M()->commit();                $this->success('添加成功');            }else{                M()->rollback();                $this->error('添加失败');            }       }    }    public function mayEdit(){	    $arr=M('lotteryConfig')->field('type,count(type) as count')->group('type')->select();       $_POST['empty']=100-$_POST['gold']-$_POST['blue']-$_POST['red'];	    M()->startTrans();        foreach ($arr as $k=>$v){            $poss=$_POST[$v['type']]/$v['count'];            $re[]=M('lotteryConfig')->where(array('type'=>$v['type']))->save(array('poss'=>$poss));        }        if($re){            M()->commit();            $this->success('修改成功');        }else{            M()->rollback();            $this->error('修改失败');        }    }}?>