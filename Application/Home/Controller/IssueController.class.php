<?phpnamespace Home\Controller;class IssueController extends HomeController{	public function index()	{        if (!userid()) {            $this->error('请先登录！');        }        if (rz(userid())=="")        {            $this->error('请先实名认证');        }        $this->assign('prompt_text', D('Text')->get_content('game_issue_buy'));        $Issue = M('Issue')->find();      //  print_r($Issue);        $Issue['bili'] = round(($Issue['deal'] / $Issue['num']) * 100, 2);        $user_coin = M('UserCoin')->where(array('userid' => userid()))->find();        $this->assign('user_coin', $user_coin);        if (!$Issue) {            $this->error('认购错误！');        }        $rgzq=$Issue['tian']*24*3600;        if (strtotime($Issue['time'])>=time())        {            $zt=-1;        }        elseif ((strtotime($Issue['time'])+$rgzq)<time())        {            $zt=1;        }        elseif ($Issue['deal']>=$Issue['num'])        {            $zt=1;        }        else        {            $zt=0;        }        $this->zt=$zt;//		$Issue['img'] = M('Coin')->where(array('name' => $Issue['coinname']))->getField('img');        $this->assign('issue', $Issue);        $this->display();	}	public function buy($id = 1)	{		if (!userid()) {			redirect('/Login');		}		$this->assign('prompt_text', D('Text')->get_content('game_issue_buy'));		if (!check($id, 'd')) {			$this->error('参数错误！');		}		$Issue = M('Issue')->where(array('id' => $id))->find();		$Issue['bili'] = round(($Issue['deal'] / $Issue['num']) * 100, 2);		$user_coin = M('UserCoin')->where(array('userid' => userid()))->find();		$this->assign('user_coin', $user_coin);		if (!$Issue) {			$this->error('认购错误！');		}        $rgzq=$Issue['tian']*24*3600;		if (strtotime($Issue['time'])>=time())        {            $zt=-1;        }        elseif ((strtotime($Issue['time'])+$rgzq)<time())        {            $zt=1;        }        elseif ($Issue['deal']>=$Issue['num'])        {            $zt=1;        }        else        {            $zt=0;        }        $this->zt=$zt;//		$Issue['img'] = M('Coin')->where(array('name' => $Issue['coinname']))->getField('img');		$this->assign('issue', $Issue);		$this->display();	}	public function log($ls = 15)	{		if (!userid()) {			redirect('/login');		}		$this->assign('prompt_text', D('Text')->get_content('game_issue_log'));		$where['status'] = array('egt', 0);		$where['userid'] = userid();		$IssueLog = M('IssueLog');		$count = $IssueLog->where($where)->count();		$Page = new \Think\Page($count, $ls);		$show = $Page->show();		$list = $IssueLog->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['shen'] = round((($v['ci'] - $v['unlock']) * $v['num']) / $v['ci'], 6);		}		$this->assign('list', $list);		$this->assign('page', $show);		$this->display();	}	public function upbuy($id, $num, $paypassword)	{		if (!userid()) {			redirect('/login');		}		if (!check($id, 'd')) {			$this->error('参数错误！');		}		if (!check($num, 'd')) {			$this->error('认购数量格式错误！');		}		if (!check($paypassword, 'paypassword')) {			$this->error('密码格式错误！');		}		$User = M('User')->where(array('id' => userid()))->find();		if (!$User['paypassword']) {			$this->error('密码非法！');		}		if (md5($paypassword) != $User['paypassword']) {			$this->error('密码错误！');		}		$Issue = M('Issue')->where(array('id' => $id))->find();		if (!$Issue) {			$this->error('认购错误！');		}		if (time() < strtotime($Issue['time'])) {			$this->error('当前认购还未开始！');		}		$rgzq=$Issue['tian']*24*3600;		if ((strtotime($Issue['time'])+$rgzq)<time())        {            $this->error('当前认购已经结束！');        }		/*if (!$Issue['status']) {			$this->error('当前认购已经结束！');		}*/		$issue_min = ($Issue['min'] ? $Issue['min'] : 9.9999999999999995E-7);		$issue_max = ($Issue['max'] ? $Issue['max'] : 100000000);		if ($num < $issue_min) {			$this->error('单次认购数量不得少于系统设置的' . $issue_min . '个');		}		if ($issue_max < $num) {			$this->error('单次认购数量不得大于系统设置的' . $issue_max . '个');		}		if (($Issue['num'] - $Issue['deal']) < $num) {			$this->error('认购数量超过当前剩余量！当前剩余 '.($Issue['num']-$Issue['deal']));		}		$mum = round($Issue['price'] * $num, 6);		if (!$mum) {			$this->error('认购总额错误');		}		$buycoin = M('UserCoin')->where(array('userid' => userid()))->getField($Issue['buycoin']);		if ($buycoin < $mum) {			$this->error('可用' . C('coin')[$Issue['buycoin']]['title'] . '余额不足');		}		$issueLog = M('IssueLog')->where(array('userid' => userid(), 'coinname' => $Issue['coinname']))->sum('num');		if ($Issue['limit'] < ($issueLog + $num)) {			$this->error('认购总数量超过最大限制' . $Issue['limit']);		}//		解冻次数与每次解冻		/*if ($Issue['ci']) {			$jd_num = round($num / $Issue['ci'], 6);		}		else {			$jd_num = $num;		}		if (!$jd_num) {			$this->error('认购解冻数量错误');		}*/        $rmb='zc';        $coindata=M("Coin")->where(array('name'=>$rmb))->find();		$mo = M();		$mo->execute('set autocommit=0');		$mo->execute('lock tables btchanges_invit write ,  btchanges_user_coin write  , btchanges_issue write  , btchanges_coin write  , btchanges_issue_log  write ,btchanges_finance write, btchanges_user write');		$rs = array();		$finance = $mo->table('btchanges_finance')->where(array('userid' => userid()))->order('id desc')->find();		$finance_num_user_coin = $mo->table('btchanges_user_coin')->where(array('userid' => userid()))->find();//		扣钱		$rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => userid()))->setDec($Issue['buycoin'], $mum);        $rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => userid()))->setInc($Issue['coinname'], $num);//		添加认购记录		$rs[] = $finance_nameid = $mo->table('btchanges_issue_log')->add(array('userid' => userid(),'iss_id'=>$Issue['id'], 'coinname' => $Issue['coinname'], 'buycoin' => $Issue['buycoin'], 'name' => $Issue['name'], 'price' => $Issue['price'], 'num' => $num, 'mum' => $mum, 'ci' => $Issue['ci'], 'jian' => $Issue['jian'], 'unlock' => 1, 'addtime' => time(), 'endtime' => time(), 'status' =>1));				$finance_mum_user_coin = $mo->table('btchanges_user_coin')->where(array('userid' => userid()))->find();		$finance_hash = md5(userid() . $finance_num_user_coin['zc'] . $finance_num_user_coin['zcd'] . $mum . $finance_mum_user_coin['zc'] . $finance_mum_user_coin['zcd'] . MSCODE . 'auth.btchanges.com');				$bc=M("Coin")->where(array('name'=>$Issue['buycoin']))->find();				if ($bc['id']==1)        {            $rs[] = $mo->table('btchanges_finance')->add(array('userid' => userid(), 'coinname' => $Issue['buycoin'], 'num_a' => $finance_num_user_coin[$Issue['buycoin']], 'num_b' => $finance_num_user_coin[$Issue['buycoin'].'d'], 'num' => $finance_num_user_coin[$Issue['buycoin']] + $finance_num_user_coin[$Issue['buycoin'].'d'], 'fee' => $mum, 'type' => 2, 'name' => 'issue', 'nameid' => $finance_nameid, 'remark' => '认购中心-立即认购', 'mum_a' => $finance_mum_user_coin[$Issue['buycoin']], 'mum_b' => $finance_mum_user_coin[$Issue['buycoin'].'d'], 'mum' => $finance_mum_user_coin[$Issue['buycoin']] + $finance_mum_user_coin[$Issue['buycoin'].'d'], 'move' => $finance_hash, 'addtime' => time(), 'status' => $finance['mum'] != $finance_num_user_coin[$Issue['buycoin']] + $finance_num_user_coin[$Issue['buycoin'].'d'] ? 0 : 1));        }		//		本次项目一次性解冻//		$rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => userid()))->setInc($Issue['coinname'], $jd_num);//		增加认购量        $rs[] = $mo->table('btchanges_issue')->where(array('id' => $id))->setInc('deal', $num);        $newIssue=M("Issue")->where(array('id' => $id))->find();        if ($newIssue['deal']>=$newIssue['num'])        {            $rs[]=M("Issue")->where(array('id' => $id))->save(array('status'=>-1));        }     //返利        $invit_buy_user = $mo->table('btchanges_user')->where(array('id' => userid()))->find();        if ($newIssue['invit_1']) {                if ($invit_buy_user['invit_1']) {                    $invit_buy_save_1 = round(($mum / 100) * $newIssue['invit_1'], 6);                    if ($invit_buy_save_1) {                        $user_old_money=M("UserCoin")->where(array('userid'=>$invit_buy_user['invit_1']))->find();                        $rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => $invit_buy_user['invit_1']))->setInc($rmb, $invit_buy_save_1);                        $rs[] = $mo->table('btchanges_invit')->add(array('userid' => $invit_buy_user['invit_1'], 'invit' => userid(), 'name' => '认购提成', 'type' =>$newIssue['neme']. '认购提成', 'num' => $num, 'mum' => $mum, 'addtime' => time(),'fee' => $invit_buy_save_1, 'status' => 1));                        if ($coindata['id']==1)                        {                            $user_new_money=M("UserCoin")->where(array('userid'=>$invit_buy_user['invit_1']))->find();                            $rs[] = $mo->table('btchanges_finance')->add(array('userid' => $invit_buy_user['invit_1'], 'coinname' => $rmb, 'num_a' => $user_old_money[$rmb], 'num_b' => $user_new_money[$rmb.'d'], 'num' => $user_old_money[$rmb] + $user_new_money[$rmb.'d'], 'fee' => $invit_buy_save_1, 'type' => 2, 'name' => 'tradelogreward', 'nameid' => $finance_nameid, 'remark' => $newIssue['neme'].'认购提成', 'mum_a' => $user_new_money[$rmb], 'mum_b' => $user_new_money[$rmb.'d'], 'mum' => $user_new_money[$rmb] + $user_new_money[$rmb.'d'], 'move' => md5($invit_buy_save_1), 'addtime' => time(), 'status' => 1));                        }                    }            }        }//		本次项目超募认购，认购期间认购        /*if ($Issue['num'] <= $Issue['deal']) {			$rs[] = $mo->table('btchanges_issue')->where(array('id' => $id))->setField('status', 0);		}*/		/*if ($User['invit_1'] && $Issue['invit_1']) {			$invit_num_1 = round(($mum / 100) * $Issue['invit_1'], 6);			if ($invit_num_1) {				$rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => $User['invit_1']))->setInc($Issue['invit_coin'], $invit_num_1);				$rs[] = $mo->table('btchanges_invit')->add(array('userid' => $User['invit_1'], 'invit' => userid(), 'name' => $Issue['name'], 'type' => '一代认购赠送', 'num' => $num, 'mum' => $mum, 'fee' => $invit_num_1, 'addtime' => time(), 'status' => 1));			}		}		if ($User['invit_2'] && $Issue['invit_2']) {			$invit_num_2 = round(($mum / 100) * $Issue['invit_2'], 6);			if ($invit_num_2) {				$rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => $User['invit_2']))->setInc($Issue['invit_coin'], $invit_num_2);				$rs[] = $mo->table('btchanges_invit')->add(array('userid' => $User['invit_2'], 'invit' => userid(), 'name' => $Issue['name'], 'type' => '二代认购赠送', 'num' => $num, 'mum' => $mum, 'fee' => $invit_num_2, 'addtime' => time(), 'status' => 1));			}		}		if ($User['invit_3'] && $Issue['invit_3']) {			$invit_num_3 = round(($mum / 100) * $Issue['invit_3'], 6);			if ($invit_num_3) {				$rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => $User['invit_3']))->setInc($Issue['invit_coin'], $invit_num_3);				$rs[] = $mo->table('btchanges_invit')->add(array('userid' => $User['invit_3'], 'invit' => userid(), 'name' => $Issue['name'], 'type' => '三代认购赠送', 'num' => $num, 'mum' => $mum, 'fee' => $invit_num_3, 'addtime' => time(), 'status' => 1));			}		}		*/		if (check_arr($rs)) {			$mo->execute('commit');			$mo->execute('unlock tables');			$this->success('购买成功！');		}		else {			$mo->execute('rollback');			$this->error('购买失败!');		}	}//	解冻认购    /*public function thaw()    {        $Iss=M("Issue")->where(array('status'=>1))->select();        foreach ($Iss as $iss)        {            $zq=$iss['tian']*24*3600;            if ((strtotime($iss['time'])+$zq)<time())            {                $rs=array();                M()->startTrans();                $Isszt=M('Issue')->where(array('id'=>$iss['id']))->save(array('status'=>0));                $sflist=M('Issue_log')->where(array('iss_id'=>$iss['id'],'status'=>0))->select();                foreach ($sflist as $value)                {                    if ($iss['deal']<=$iss['num'])                    {                        $num=$value['num'];                    }                    else                    {                        $num=round($iss['num']/$iss['deal']*$value['num'],8);                    }                    $finance=M("Finance")->where(array('userid'=>$value['userid'],'coinname'=>$value['coinname']))->find();                    $old_user_coin=M("UserCoin")->where(array('userid'=>userid()))->find();                    $rs[]=M('UserCoin')->where(array('userid'=>$value['userid']))->setInc($value['coinname'],$num);                    $rs[]=M('Issue_log')->where(array('id'=>$value['id']))->save(array('status'=>1,'endtime'=>time()));                    $finance_mum_user_coin = M()->table('btchanges_user_coin')->where(array('userid' =>$value['userid']))->find();                    $finance_hash = md5($value['userid'] . $old_user_coin[$value['coinname']] . $old_user_coin[$value['coinname'].'d'] . $num . $finance_mum_user_coin[$value['coinname']] . $finance_mum_user_coin[$value['coinname'].'d'] . MSCODE . 'com');//                    $rs[] = M()->table('btchanges_finance')->add(array('userid' => $value['userid'], 'coinname' => $value['coinname'], 'num_a' => $old_user_coin[$value['coinname']], 'num_b' => $old_user_coin[$value['coinname'].'d'], 'num' => $old_user_coin[$value['coinname']] + $old_user_coin[$value['coinname'].'d'], 'fee' => $num, 'type' => 21, 'name' => 'issueThaw', 'nameid' => $value['id'], 'remark' => '认购中心-认购释放', 'mum_a' => $finance_mum_user_coin[$value['coinname']], 'mum_b' => $finance_mum_user_coin[$value['coinname'].'d'], 'mum' => $finance_mum_user_coin[$value['coinname']] + $finance_mum_user_coin[$value['coinname'].'d'], 'move' => $finance_hash, 'addtime' => time(), 'status' => $finance['mum'] != $old_user_coin[$value['coinname']] + $old_user_coin[$value['coinname'].'d'] ? 0 : 1));                }                if (!check_arr($rs) || !$Isszt)                {                    M()->rollback();                    $this->savetxt(date("Y-m-d H:i:s").'数据更新错误'."\r\n");                }                else                {                    M()->commit();                    $this->savetxt(date('Y-m-d H:i:s').'数据更新成功'."\r\n");                }            }        }        echo 123;        exit();    }*/    public function savetxt($content)    {        $f = fopen('Public/data/'.date('Ymd').'.txt', 'a+');//我猜测你应该是想累加存储，在文件的结尾插入，所以用了fopen和a+，        fwrite($f, $content);        fclose($f);    }	public function unlock($id)	{		if (!userid()) {			redirect('/login');		}		if (!check($id, 'd')) {			$this->error('请选择解冻项！');		}		$IssueLog = M('IssueLog')->where(array('id' => $id))->find();		if (!$IssueLog) {			$this->error('参数错误！');		}		if ($IssueLog['status']) {			$this->error('当前解冻已完成！');		}		/*if ($IssueLog['ci'] <= $IssueLog['unlock']) {			$this->error('非法访问！');		}*/		/*$tm = $IssueLog['endtime'] + (60 * 60 * $IssueLog['jian']);*/        $Issue=M('Issue')->where(array('id'=> $IssueLog['iss_id']))->find();        $tm=strtotime($Issue['time'])+(60*60*24*$Issue['tian']);		if (time() < $tm) {			$this->error('解冻时间还没有到,请在<br>【' . addtime($tm) . '】<br>之后再次操作');		}		if ($IssueLog['userid'] != userid()) {			$this->error('非法访问');		}		/*$jd_num = round($IssueLog['num'] / $IssueLog['ci'], 6);*/        $jd_num=$IssueLog['num'];		$mo = M();		$mo->execute('set autocommit=0');		$mo->execute('lock tables btchanges_user_coin write  , btchanges_issue_log write ');		$rs = array();		$rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => userid()))->setInc($IssueLog['coinname'], $jd_num);		$rs[] = $mo->table('btchanges_issue_log')->where(array('id' => $IssueLog['id']))->save(array(/*'unlock' => $IssueLog['unlock'] + 1,*/ 'endtime' => time()));		/*if ($IssueLog['ci'] <= $IssueLog['unlock'] + 1) {*/			$rs[] = $mo->table('btchanges_issue_log')->where(array('id' => $IssueLog['id']))->save(array('status' => 1));		/*}*/		if (check_arr($rs)) {			$mo->execute('commit');			$mo->execute('unlock tables');			$this->success('解冻成功！');		}		else {			$mo->execute('rollback');			$this->error('解冻失败！');		}	}	public function uninstall()	{		M('Menu')->where(array('url' => 'Issue/index'))->delete();		M('Menu')->where(array('url' => 'Issue/log'))->delete();		M('Menu')->where(array('url' => 'Issuelog/index'))->delete();		return 1;		exit();	}    }?>