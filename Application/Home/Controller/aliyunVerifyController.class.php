<?phpnamespace Home\Controller;use Home\Controller\SendController;class VerifyController extends HomeController{	public function __construct()	{		parent::__construct();	}	public function code()	{        ob_clean();		$config['useNoise'] = false;		$config['length'] = 4;		$config['codeSet'] = '0123456789';		$verify = new \Think\Verify($config);		$verify->entry(1);	}	public function real($moble, $verify,$country_code)	{		if (!userid()) {            $this->error('请导入','/login');		}		if (!check_verify(strtoupper($verify))) {			$this->error('图形验证码错误!');		}		if (!check($moble, 'moble')) {			$this->error('手机号码格式错误！');		}		if (M('User')->where(array('moble' => $moble))->find()) {			$this->error('手机号码已存在！');		}		$code = rand(111111, 999999);		session('real_verify', $code);		$content = '您正在进行手机操作，您的验证码是' . $code;        if($country_code=='86'){            //内地            $template="SMS_136015149";        }else{            //港澳台/国际        }		if (SendController::sendSms($moble,$code,$template)) {			$this->success('短信验证码已发送到你的手机，请查收');		}		else {			$this->error('短信验证码发送失败，请重新点击发送');		}	}    public function checkphonemsg($moble, $verify,$country_code)    {        if (!check_verify(strtoupper($verify))) {            $this->error('图形验证码错误!');        }        if (!check($moble, 'moble')) {            $this->error('手机号码格式错误！');        }        if (M('User')->where(array('moble' => $moble))->find()) {            $this->error('手机号码已存在！');        }        $code = rand(111111, 999999);        if($country_code=='86'){            //内地            $template="SMS_127820094";        }else{            //港澳台/国际        }       /* session('real_verify', $code);*///        $content = "您好！您的验证码是：".$code."，请及时验证。如非本人操作，可不用理会。【贝壳网】";       /* $a=sendSms($moble, "您好，您正在注册账户，您的验证码为".$code."！【优链网】");*/        $a=SendController::sendSms($moble,$code,$template);        if ($a) {            $this->success('短信验证码已发送到你的手机，请查收');        }        else {            $this->success('短信验证码发送失败，请重新点击发送');        }    }	public function mytx()	{		if (!userid()) {			$this->error('请先登录');		}		$moble = M('User')->where(array('id' => userid()))->getField('moble');		if (!$moble) {			$this->error('你的手机没有认证');		}		$code = rand(111111, 999999);		session('mytx_verify', $code);		/*$content = '您好！您正在进行提现操作，您的验证码是 '.$code.'。请勿向他人提供验证码！【优链网】';*/        //send_moble        $template="SMS_135791515";		if (SendController::sendSms($moble,$code,$template)) {			$this->success('短信验证码已发送到你的手机，请查收');		}		else {			$this->error('短信验证码发送失败，请重新点击发送');		}	}	public function sendMobileCode()	{		if (IS_POST) {			$input = I('post.');			if (!check_verify(strtoupper($input['verify']))) {				$this->error('图形验证码错误!', 'mobile_verify');			}			if (!check($input['mobile'], 'moble')) {				$this->error('手机号码格式错误！', 'mobile');			}			if (M('User')->where(array('moble' => $input['mobile']))->find()) {				$this->error('手机号码已存在！');			}			if ((session('mobile#mobile') == $input['mobile']) && (time() < (session('mobile#real_verify#time') + 600))) {				$code = session('mobile#real_verify');				session('mobile#real_verify', $code);			}			else {				$code = rand(111111, 999999);				session('mobile#real_verify#time', time());				session('mobile#mobile', $input['mobile']);				session('mobile#real_verify', $code);			}			$content = '您正在进行手机操作，您的验证码是' . $code;			if (1) {				$this->success('短信验证码已发送到你的手机，请查收' . $code);			}			else {				$this->error('短信验证码发送失败，请重新点击发送');			}		}		else {			$this->error('非法访问！');		}	}	public function sendEmailCode()	{		if (IS_POST) {			$input = I('post.');			if (!check_verify(strtoupper($input['verify']))) {				$this->error('图形验证码错误!');			}			if (!check($input['email'], 'email')) {				$this->error('邮箱格式错误！');			}			if (M('User')->where(array('email' => $input['email']))->find()) {				$this->error('邮箱已存在！');			}			if ((session('email#email') == $input['email']) && (time() < (session('email#real_verify#time') + 600))) {				$code = session('email#real_verify');				session('email#real_verify', $code);			}			else {				$code = rand(111111, 999999);				session('email#real_verify#time', time());				session('email#email', $input['email']);				session('email#real_verify', $code);			}			$content = '您正在进行邮箱注册操作，您的验证码是' . $code;			if (1) {				$this->success('邮箱验证码已发送到你的邮箱，请前往查收' . $content);			}			else {				$this->error('邮箱验证码发送失败，请重新点击发送');			}		}		else {			$this->error('非法访问！');		}	}	public function findpwd()	{		if (IS_POST) {			$input = I('post.');			if (!check_verify(strtoupper($input['verify']))) {				$this->error('图形验证码错误!');			}			/*if (!check($input['username'], 'username')) {				$this->error('用户名格式错误！');			}*/			if (!check($input['moble'], 'moble')) {				$this->error('手机号码格式错误！');			}			$user = M('User')->where(array('moble' => $input['moble']))->find();			if (!$user) {				$this->error('用户不存在！');			}			if ($user['moble'] != $input['moble']) {				$this->error('用户名或手机号码错误！');			}			$code = rand(111111, 999999);			session('findpwd_verify', $code);		/*	$content = '您好！您正在进行找回密码操作，您的验证码是 '.$code.'【优链网】';*/            $template="SMS_136025125";			if (SendController::sendSms($input['moble'],$code,$template)) {				$this->success('短信验证码已发送到你的手机，请查收');			}			else {				$this->error('短信验证码发送失败，请重新点击发送');			}		}	}	public function findpaypwd()	{		$input = I('post.');		if (!check_verify(strtoupper($input['verify']))) {			$this->error('图形验证码错误!');		}//		if (!check($input['username'], 'username')) {////			$this->error('用户名格式错误！');////		}		if (!check($input['moble'], 'moble')) {			$this->error('手机号码格式错误！');		}		$user = M('User')->where(array('moble' => $input['moble']))->find();		if (!$user) {			$this->error('用户名不存在！');		}//		if ($user['moble'] != $input['moble']) {////			$this->error('用户名或手机号码错误！');////		}		$code = rand(111111, 999999);		session('findpaypwd_verify', $code);		/*$content = '您好！您正在进行找回密码操作，您的验证码是 '.$code.'【优链网】';*/        $template="SMS_136025125";        if (SendController::sendSms($input['moble'],$code,$template)) {			$this->success('短信验证码已发送到你的手机，请查收');		}		else {			$this->error('短信验证码发送失败，请重新点击发送');		}	}	public function myzc()	{		if (!userid()) {			$this->error('您没有登录请先登录!');		}		$moble = M('User')->where(array('id' => userid()))->getField('moble');		if (!$moble) {			$this->error('你的手机没有认证');		}		$code = rand(111111, 999999);		session('myzc_verify', $code);	/*	$content = '您正在进行申请转出操作，您的验证码是' . $code;*/        $template="SMS_136015149";        if (SendController::sendSms($moble,$code,$template)) {			$this->success('短信验证码已发送到你的手机，请查收');		}		else {			$this->error('短信验证码发送失败，请重新点击发送');		}	}    public function ldbtx()    {        if (!userid()) {            $this->error('请先登录');        }        $moble = M('User')->where(array('id' => userid()))->getField('moble');        if (!$moble) {            $this->error('你的手机没有认证');        }        $code = rand(111111, 999999);        session('ldbtx_verify', $code);        /*$content = '您正在进行申请提现操作，您的验证码是' . $code .'【中联】';*/        $template="SMS_135791515";        if (SendController::sendSms($moble,$code,$template)) {            $this->success('短信验证码已发送到你的手机，请查收');        }        else {            $this->error('短信验证码发送失败，请重新点击发送');        }    }}?>