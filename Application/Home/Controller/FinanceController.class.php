<?phpnamespace Home\Controller;class FinanceController extends HomeController{    public function index()    {        if (!userid()) {            redirect("/login");        }        $CoinList = M('Coin')->where(array('status' => 1, "name" => array('neq', "cny")))->select();        $UserCoin = M('UserCoin')->where(array('userid' => userid()))->find();        $Market = M('Market')->where(array('status' => 1))->select();        foreach ($Market as $k => $v) {            $Market[$v['name']] = $v;        }        $cny['zj'] = 0;        $usd['zj'] = 0;        foreach ($CoinList as $k => $v) {            if ($v['name'] == 'cny') {                $cny['ky'] = round($UserCoin[$v['name']], 2) * 1;                $cny['dj'] = round($UserCoin[$v['name'] . 'd'], 2) * 1;                $cny['zj'] = $cny['zj'] + $cny['ky'] + $cny['dj'];            } else {                if ($Market[$v['name'] . '_zc']['new_price']) {                    $jia = $Market[$v['name'] . '_zc']['new_price'];                } else {                    $jia = 1;                }                $coinList[$v['name']] = array('name' => $v['name'], 'img' => $v['img'], 'title' => $v['title'] . '(' . strtoupper($v['name']) . ')', 'xnb' => round($UserCoin[$v['name']], 6) * 1, 'xnbd' => round($UserCoin[$v['name'] . 'd'], 6) * 1, 'xnbz' => round($UserCoin[$v['name']] + $UserCoin[$v['name'] . 'd'], 6), 'jia' => $jia * 1, 'zhehe' => round(($UserCoin[$v['name']] + $UserCoin[$v['name'] . 'd']) * $jia, 2));                $cny['zj'] = round($cny['zj'] + (($UserCoin[$v['name']] + $UserCoin[$v['name'] . 'd']) * $jia), 2) * 1;            }        }        $this->assign('cny', $cny);        $this->assign('usd', $usd);        $this->assign('coinList', $coinList);        $this->assign('prompt_text', D('Text')->get_content('finance_index'));        $this->display();    }    public function mydj()    {        $CoinList = M('Coin')->where(array('status' => 1))->select();        $UserCoin = M('UserCoin')->where(array('userid' => userid()))->find();        $Market = M('Market')->where(array('status' => 1))->select();        foreach ($CoinList as $k => $v) {            if ($Market[$v['name'] . '_zc']['new_price']) {                $jia = $Market[$v['name'] . '_zc']['new_price'];            }            $coinList[$v['name']] = array('name' => $v['name'], 'img' => $v['img'], 'title' => $v['title'] . '(' . strtoupper($v['name']) . ')', 'xnb' => round($UserCoin[$v['name']], 6) * 1, 'xnbd' => round($UserCoin[$v['name'] . 'd'], 6) * 1, 'xnbz' => round($UserCoin[$v['name']] + $UserCoin[$v['name'] . 'd'], 6), 'jia' => $jia * 1, 'zhehe' => round(($UserCoin[$v['name']] + $UserCoin[$v['name'] . 'd']) * $jia, 2));        }        $this->assign('coinList', $coinList);        $this->display();    }    public function mycz($status = NULL)    {        if (!userid()) {            redirect('/login');        }        if (rz(userid()) == "") {            echo "<script>window.location.href='/User/nameauth';</script>";            die();        }        $this->assign('prompt_text', D('Text')->get_content('finance_mycz'));        $myczType = M('MyczType')->where(array('status' => 1))->select();        foreach ($myczType as $k => $v) {            $myczTypeList[$v['name']] = $v['title'];        }        $this->assign('myczTypeList', $myczTypeList);        $user_coin = M('UserCoin')->where(array('userid' => userid()))->find();        $user_coin['zc'] = round($user_coin['zc'], 2);        $user_coin['zcd'] = round($user_coin['zcd'], 2);        $this->assign('user_coin', $user_coin);        if (($status == 1) || ($status == 2) || ($status == 3) || ($status == 4)) {            $where['status'] = $status - 1;        }        $this->assign('status', $status);        $where['userid'] = userid();        $count = M('Mycz')->where($where)->count();        $Page = new \Think\Page($count, 4);        page($Page);        $show = $Page->show();        $list = M('Mycz')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['name'] = $list[$k]['type'];            $list[$k]['type'] = M('MyczType')->where(array('name' => $v['type']))->getField('title');            $list[$k]['num'] = (Num($v['num']) ? Num($v['num']) : '');            $list[$k]['mum'] = (Num($v['mum']) ? Num($v['mum']) : '');        }        $number=rand(0,99);        $fla=sprintf ( "%02d",$number);        $this->assign('fla', $fla);        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function myczHuikuan($id = NULL)    {        if (!userid()) {            $this->error('请先登录！');        }        if (!check($id, 'd')) {            $this->error('参数错误！');        }        $mycz = M('Mycz')->where(array('id' => $id))->find();        if (!$mycz) {            $this->error('充值订单不存在！');        }        if ($mycz['userid'] != userid()) {            $this->error('非法操作！');        }        if ($mycz['status'] != 0) {            $this->error('订单已经处理过！');        }        $rs = M('Mycz')->where(array('id' => $id))->save(array('status' => 3));        if ($rs) {            $this->success('操作成功');        } else {            $this->error('操作失败！');        }    }    public function myczChakan($id = NULL)    {        if (!userid()) {            $this->error('请先登录！');        }        if (!check($id, 'd')) {            $this->error('参数错误！');        }        $mycz = M('Mycz')->where(array('id' => $id))->find();        if (!$mycz) {            $this->error('充值订单不存在！');        }        if ($mycz['userid'] != userid()) {            $this->error('非法操作！');        }        if ($mycz['status'] != 0) {            $this->error('订单已经处理过！');        }        $rs = M('Mycz')->where(array('id' => $id))->save(array('status' => 3));        if ($rs) {            $this->success('', array('id' => $id));        } else {            $this->error('操作失败！');        }    }    public function myczUp($type, $num, $coin)    {        if (!userid()) {            $this->error('请先登录！');        }        if (!check($type, 'n')) {            $this->error('充值方式格式错误！');        }        if (!check($num, 'zc')) {            $this->error('充值金额格式错误！');        }        $myczType = M('MyczType')->where(array('name' => $type))->find();        if (!$myczType) {            $this->error('充值方式不存在！');        }        if ($myczType['status'] != 1) {            $this->error('充值方式没有开通！');        }        $mycz_min = ($myczType['min'] ? $myczType['min'] : 1);        $mycz_max = ($myczType['max'] ? $myczType['max'] : 100000);        if ($num < $mycz_min) {            $this->error('充值金额不能小于' . $mycz_min . '元！');        }        if ($mycz_max < $num) {            $this->error('充值金额不能大于' . $mycz_max . '元！');        }        for (; true;) {            $tradeno = tradeno();            if (!M('Mycz')->where(array('tradeno' => $tradeno))->find()) {                break;            }        }        $mycz = M('Mycz')->add(array('userid' => userid(), 'm_type' => $coin, 'num' => $num, 'type' => $type, 'tradeno' => $tradeno, 'addtime' => time(), 'status' => 0));        if ($mycz) {            $this->success('充值订单创建成功！', array('id' => $mycz));        } else {            $this->error('提现订单创建失败！');        }    }    public function mytx($status = NULL,$type=NULL)    {        //print_r($type);        if(!$type){            $type='alipay';        }        if (!userid()) {            redirect('/login');        }        if (rz(userid()) == "") {            echo "<script>window.location.href='/User/nameauth';</script>";            die();        }        $this->assign('prompt_text', D('Text')->get_content('finance_mytx'));        $moble = M('User')->where(array('id' => userid()))->getField('moble');        $user = M('User')->where(array('id' => userid()))->find();        $arr = explode('|', $user['ga']);        $this->gg = $arr[2];        if ($moble) {            $moble = substr_replace($moble, '****', 3, 4);        } else {            $this->error('请先认证手机！');        }        $this->assign('moble', $moble);        $user_coin = M('UserCoin')->where(array('userid' => userid()))->find();        $user_coin['zc'] = round($user_coin['zc'], 2);        $user_coin['zcd'] = round($user_coin['zcd'], 2);        $this->assign('user_coin', $user_coin);        $userBankList = M('UserBank')->where(array('userid' => userid(),'type'=>$type, 'status' => 1))->find();        $a = array('bank' => '银行卡', 'alipay' => '支付宝','weixin' => '微信');        if (!empty($userBankList)) {            $userBankList['type']=$a[$type];        }        //print_r($userBankList);        $this->assign('type', $type);        $this->assign('userBankList', $userBankList);        if (($status == 1) || ($status == 2) || ($status == 3) || ($status == 4)) {            $where['status'] = $status - 1;        }        $this->assign('status', $status);        $where['userid'] = userid();        $count = M('Mytx')->where($where)->count();        $Page = new \Think\Page($count, 15);        page($Page);        $show = $Page->show();        $list = M('Mytx')->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['num'] = (Num($v['num']) ? Num($v['num']) : '');            $list[$k]['fee'] = (Num($v['fee']) ? Num($v['fee']) : '');            $list[$k]['mum'] = (Num($v['mum']) ? Num($v['mum']) : '');        }            $user=M('UserBank')->where(array('userid'=>userid(),"type"=>$type))->find();        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function mytxUp($coin, $moble_verify, $num, $paypassword, $type, $google=NULL)    {        if (!userid()) {            $this->error('请先登录！');        }        $time=M('mytx')->where(array('status'=>array('neq',2)))->order('addtime desc')->limit(0,1)->getField('addtime');        if(date('Y-m-d', $time)>=date('Y-m-d', time())){            $this->error('每天只能提现一单！');        }        if (!check($moble_verify, 'd')) {            $this->error('短信验证码格式错误！');        }        if (!check($num, 'd')) {            $this->error('提现金额格式错误！');        }        if (!check($paypassword, 'paypassword')) {            $this->error('交易密码格式错误！');        }        if (!check($type, 'd')) {            $this->error('提现方式格式错误！');        }//		if ($moble_verify != session('mytx_verify')) {//			$this->error('短信验证码错误！');//		}        $userCoin = M('UserCoin')->where(array('userid' => userid()))->find();            if ($userCoin['zc'] < $num) {                $this->error('可用兑换券(人民币)余额不足！');            }        $user = M('User')->where(array('id' => userid()))->find();        if (md5($paypassword) != $user['paypassword']) {            $this->error('交易密码错误！');        }        $arr = explode('|', $user['ga']);        $secret = $arr[0];        if ($arr[2] == 1) {            $ga = new \Common\Ext\GoogleAuthenticator();            $check_gg = $ga->verifyCode($secret, $google, 1);            if (!$check_gg) {                $this->error('谷歌验证错误');            }        }        $userBank = M('UserBank')->where(array('id' => $type))->find();        if (!$userBank) {            $this->error('提现地址错误！');        }            $mytx_min = (C('mytx_min') ? C('mytx_min') : 1);            $mytx_max = (C('mytx_max') ? C('mytx_max') : 1000000);            $mytx_bei = C('mytx_bei');            $mytx_fee = C('mytx_fee');        if ($num < $mytx_min) {            $this->error('每次提现金额不能小于' . $mytx_min . '元！');        }        if ($mytx_max < $num) {            $this->error('每次提现金额不能大于' . $mytx_max . '元！');        }        if ($mytx_bei) {            if ($num % $mytx_bei != 0) {                $this->error('每次提现金额必须是' . $mytx_bei . '的整倍数！');            }        }        $fee = round(($num / 100) * $mytx_fee, 2);        $mum = round(($num / 100) * (100 - $mytx_fee), 2);      $mo = M();        $mo->execute('set autocommit=0');        $mo->execute('lock tables btchanges_mytx write , btchanges_user_coin write ,btchanges_finance write');        $rs = array();        $finance = $mo->table('btchanges_finance')->where(array('userid' => userid()))->order('id desc')->find();        $finance_num_user_coin = $mo->table('btchanges_user_coin')->where(array('userid' => userid()))->find();            $rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => userid()))->setDec('zc', $num);        $rs[] = $finance_nameid = $mo->table('btchanges_mytx')            ->add(array(                    'userid' => userid(),                    'm_type'=>$coin,                    'cz_mum'=>$coin,                    'num' => $num,                    'fee' => $fee,                    'mum' => $mum,                    'name' => 'mytx',                    'truename' => $user['truename'],                    'bank' => $userBank['bank'],                    'bankcard' => $userBank['bankcard'],                    'addtime' => time(),                    'status' => 0,                    'tx_type' =>$userBank['type'])            );        $finance_mum_user_coin = $mo->table('btchanges_user_coin')->where(array('userid' => userid()))->find();        $finance_hash = md5(userid() . $finance_num_user_coin[$coin] . $finance_num_user_coin[$coin . 'd'] . $mum . $finance_mum_user_coin[$coin] . $finance_mum_user_coin[$coin . 'd'] . MSCODE . 'auth.btchanges.com');        $finance_num = $finance_num_user_coin[$coin] + $finance_num_user_coin[$coin . 'd'];            $coin = "zc";        if ($finance['mum'] < $finance_num) {            $finance_status = (1 < ($finance_num - $finance['mum']) ? 0 : 1);        } else {            $finance_status = (1 < ($finance['mum'] - $finance_num) ? 0 : 1);        }        $rs[] = $mo->table('btchanges_finance')->add(array('userid' => userid(), 'coinname' => $coin, 'num_a' => $finance_num_user_coin[$coin], 'num_b' => $finance_num_user_coin[$coin . 'd'], 'num' => $finance_num_user_coin[$coin] + $finance_num_user_coin[$coin . 'd'], 'fee' => $num, 'type' => 2, 'name' => 'mytx', 'nameid' => $finance_nameid, 'remark' => '兑换券提现-申请提现', 'mum_a' => $finance_mum_user_coin[$coin], 'mum_b' => $finance_mum_user_coin[$coin . 'd'], 'mum' => $finance_mum_user_coin[$coin] + $finance_mum_user_coin[$coin . 'd'], 'move' => $finance_hash, 'addtime' => time(), 'status' => $finance_status));        if (check_arr($rs)) {            session('mytx_verify', null);            $mo->execute('commit');            $mo->execute('unlock tables');            $this->success('提现订单创建成功！');        } else {            $mo->execute('rollback');            $this->error('提现订单创建失败！');        }    }    public function mytxChexiao($id, $coin)    {        if (!userid()) {            $this->error('请先登录！');        }        if (!check($id, 'd')) {            $this->error('参数错误！');        }        $mytx = M('Mytx')->where(array('id' => $id))->find();        if (!$mytx) {            $this->error('提现订单不存在！');        }        if ($mytx['userid'] != userid()) {            $this->error('非法操作！');        }        if ($mytx['status'] != 0) {            $this->error('订单不能撤销！');        }        $mo = M();        $mo->execute('set autocommit=0');        $mo->execute('lock tables btchanges_user_coin write,btchanges_mytx write,btchanges_finance write');        $rs = array();        $finance = $mo->table('btchanges_finance')->where(array('userid' => $mytx['userid']))->order('id desc')->find();        $finance_num_user_coin = $mo->table('btchanges_user_coin')->where(array('userid' => $mytx['userid']))->find();        $rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => $mytx['userid']))->setInc($coin, $mytx['num']);        $rs[] = $mo->table('btchanges_user_coin')->where(array('userid' => $mytx['userid']))->setDec($coin.'d', $mytx['num']);        $rs[] = $mo->table('btchanges_mytx')->where(array('id' => $mytx['id']))->setField('status', 2);        $finance_mum_user_coin = $mo->table('btchanges_user_coin')->where(array('userid' => $mytx['userid']))->find();        $finance_hash = md5($mytx['userid'] . $finance_num_user_coin[$coin] . $finance_num_user_coin[$coin . 'd'] . $mytx['num'] . $finance_mum_user_coin[$coin] . $finance_mum_user_coin[$coin . 'd'] . MSCODE . 'auth.btchanges.com');        $finance_num = $finance_num_user_coin[$coin] + $finance_num_user_coin[$coin . 'd'];        if ($finance['mum'] < $finance_num) {            $finance_status = (1 < ($finance_num - $finance['mum']) ? 0 : 1);        } else {            $finance_status = (1 < ($finance['mum'] - $finance_num) ? 0 : 1);        }        $rs[] = $mo->table('btchanges_finance')->add(array('userid' => $mytx['userid'], 'coinname' => $coin, 'num_a' => $finance_num_user_coin[$coin], 'num_b' => $finance_num_user_coin[$coin . 'd'], 'num' => $finance_num_user_coin[$coin] + $finance_num_user_coin[$coin . 'd'], 'fee' => $mytx['num'], 'type' => 1, 'name' => 'mytx', 'nameid' => $mytx['id'], 'remark' => '人民币提现-撤销提现', 'mum_a' => $finance_mum_user_coin[$coin], 'mum_b' => $finance_mum_user_coin[$coin . 'd'], 'mum' => $finance_mum_user_coin[$coin] + $finance_mum_user_coin[$coin . 'd'], 'move' => $finance_hash, 'addtime' => time(), 'status' => $finance_status));        if (check_arr($rs)) {            $mo->execute('commit');            $mo->execute('unlock tables');            $this->success('操作成功！');        } else {            $mo->execute('rollback');            $this->error('操作失败！');        }    }    public function  payselect(){        if (!userid()) {            redirect('/login');        }        $this->display();    }    public function mywt($market = NULL, $type = NULL, $status = NULL)    {        if (!userid()) {            redirect('/login');        }        $this->assign('prompt_text', D('Text')->get_content('finance_mywt'));        check_server();        $Coin = M('Coin')->where(array('status' => 1))->select();        foreach ($Coin as $k => $v) {            $coin_list[$v['name']] = $v;        }        $this->assign('coin_list', $coin_list);        $Market = M('Market')->where(array('status' => 1))->select();        foreach ($Market as $k => $v) {            $v['xnb'] = explode('_', $v['name'])[0];            $v['rmb'] = explode('_', $v['name'])[1];            $market_list[$v['name']] = $v;        }        $this->assign('market_list', $market_list);        if (!$market_list[$market]) {            $market = $Market[0]['name'];        }        $where['market'] = $market;        if (($type == 1) || ($type == 2)) {            $where['type'] = $type;        }        if (($status == 1) || ($status == 2) || ($status == 3)) {            $where['status'] = $status - 1;        }        $where['userid'] = userid();        $this->assign('market', $market);        $this->assign('type', $type);        $this->assign('status', $status);        $Moble = M('Trade');        $count = $Moble->where($where)->count();        $Page = new \Think\Page($count, 15);        $Page->parameter .= 'type=' . $type . '&status=' . $status . '&market=' . $market . '&';        page($Page);        $show = $Page->show();        $list = $Moble->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['num'] = $v['num'] * 1;            $list[$k]['price'] = $v['price'] * 1;            $list[$k]['deal'] = $v['deal'] * 1;        }        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function mycj($market = NULL, $type = NULL)    {        if (!userid()) {            redirect('/login');        }        $this->assign('prompt_text', D('Text')->get_content('finance_mycj'));        check_server();        $Coin = M('Coin')->where(array('status' => 1))->select();        foreach ($Coin as $k => $v) {            $coin_list[$v['name']] = $v;        }        $this->assign('coin_list', $coin_list);        $Market = M('Market')->where(array('status' => 1))->select();        foreach ($Market as $k => $v) {            $v['xnb'] = explode('_', $v['name'])[0];            $v['rmb'] = explode('_', $v['name'])[1];            $market_list[$v['name']] = $v;        }        $this->assign('market_list', $market_list);        if (!$market_list[$market]) {            $market = $Market[0]['name'];        }        if ($type == 1) {            $where = 'userid=' . userid() . ' && market=\'' . $market . '\'';        } else if ($type == 2) {            $where = 'peerid=' . userid() . ' && market=\'' . $market . '\'';        } else {            $where = '((userid=' . userid() . ') || (peerid=' . userid() . ')) && market=\'' . $market . '\'';        }        $this->assign('market', $market);        $this->assign('type', $type);        $this->assign('userid', userid());        $Moble = M('TradeLog');        $count = $Moble->where($where)->count();        $Page = new \Think\Page($count, 15);        $Page->parameter .= 'type=' . $type . '&market=' . $market . '&';        $show = $Page->show();        $list = $Moble->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['num'] = $v['num'] * 1;            $list[$k]['price'] = $v['price'] * 1;            $list[$k]['mum'] = $v['mum'] * 1;            $list[$k]['fee_buy'] = $v['fee_buy'] * 1;            $list[$k]['fee_sell'] = $v['fee_sell'] * 1;        }        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function mytj()    {        if (!userid()) {            redirect('/login');        }        $this->assign('prompt_text', D('Text')->get_content('finance_mytj'));        check_server();        $user = M('User')->where(array('id' => userid()))->find();        if (!$user['invit']) {            for (; true; ) {                $tradeno = tradenoa();                if (!M('User')->where(array('invit' => $tradeno))->find()) {                    break;                }            }            M('User')->where(array('id' => userid()))->save(array('invit' => $tradeno));           M('User')->where(array('id' => userid()))->find();        }        $QR=createQRcode("Upload/QRcode/","http://".$_SERVER['HTTP_HOST']."/Login/register/?invit=".$user['invit']);        $this->assign('user', $user);        $this->assign('QR', $QR);        $this->display();    }    public function mywd()    {        if (!userid()) {            redirect('/login');        }        $this->assign('prompt_text', D('Text')->get_content('finance_mywd'));        check_server();        $where['invit_1'] = userid();        $Model = M('User');        $count = $Model->where($where)->count();        $Page = new \Think\Page($count, 10);        page($Page);        $show = $Page->show();        $list = $Model->where($where)->order('id asc')->field('id,username,moble,addtime,invit_1')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['moble']=substr_replace($v['moble'],'****',3,4);            $list[$k]['invits'] = M('User')->where(array('invit_1' => $v['id']))->order('id asc')->field('id,username,moble,addtime,invit_1')->select();            $list[$k]['invitss'] = count($list[$k]['invits']);            foreach ($list[$k]['invits'] as $kk => $vv) {                $list[$k]['invits'][$kk]['invits'] = M('User')->where(array('invit_1' => $vv['id']))->order('id asc')->field('id,username,moble,addtime,invit_1')->select();                $list[$k]['invits'][$kk]['invitss'] = count($list[$k]['invits'][$kk]['invits']);            }        }        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function myjp()    {        if (!userid()) {            redirect('/login');        }        $this->assign('prompt_text', D('Text')->get_content('finance_myjp'));        check_server();        $where['userid'] = userid();        $where['_string'] = '(type="认购提成") OR (type like "%gold_zc%") ';        $Model = M('Invit');        $count = $Model->where($where)->count();        $Page = new \Think\Page($count, 10);        page($Page);        $show = $Page->show();        $list = $Model->where($where)->order('id desc')->limit($Page->firstRow . ',' . $Page->listRows)->select();        foreach ($list as $k => $v) {            $list[$k]['invit'] = M('User')->where(array('id' => $v['invit']))->getField('moble');        }        $this->assign('list', $list);        $this->assign('page', $show);        $this->display();    }    public function install()    {        if (!S(MODULE_NAME . CONTROLLER_NAME . 'check')) {            $Config_DbFields = M('MyczType')->getDbFields();            if (!in_array('truename', $Config_DbFields)) {                M()->execute('ALTER TABLE `btchanges_mycz_type` ADD COLUMN `truename` VARCHAR(200)  NOT NULL   COMMENT \'名称\' AFTER `id`;');            }            if (!in_array('kaihu', $Config_DbFields)) {                M()->execute('ALTER TABLE `btchanges_mycz_type` ADD COLUMN `kaihu` VARCHAR(200)  NOT NULL   COMMENT \'名称\' AFTER `id`;');            }            if (!in_array('img', $Config_DbFields)) {                M()->execute('ALTER TABLE `btchanges_mycz_type` ADD COLUMN `img` VARCHAR(200)  NOT NULL   COMMENT \'名称\' AFTER `id`;');            }            if (!in_array('min', $Config_DbFields)) {                M()->execute('ALTER TABLE `btchanges_mycz_type` ADD COLUMN `min` VARCHAR(200)  NOT NULL   COMMENT \'名称\' AFTER `id`;');            }            if (!in_array('max', $Config_DbFields)) {                M()->execute('ALTER TABLE `btchanges_mycz_type` ADD COLUMN `max` VARCHAR(200)  NOT NULL   COMMENT \'名称\' AFTER `id`;');            }            if (!in_array('username', $Config_DbFields)) {                M()->execute('ALTER TABLE `btchanges_mycz_type` ADD COLUMN `username` VARCHAR(200)  NOT NULL   COMMENT \'名称\' AFTER `id`;');            }            $list = M('Menu')->where(array(                'url' => 'Finance/index',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else if (!$list) {                M('Menu')->add(array('url' => 'Finance/index', 'title' => '财务明细', 'pid' => 4, 'sort' => 1, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            } else {                M('Menu')->where(array(                    'url' => 'Finance/index',                    'pid' => array('neq', 0)                ))->save(array('title' => '财务明细', 'pid' => 4, 'sort' => 1, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            }            $list = M('Menu')->where(array(                'url' => 'Finance/mycz',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else if (!$list) {                M('Menu')->add(array('url' => 'Finance/mycz', 'title' => '人民币充值', 'pid' => 4, 'sort' => 2, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            } else {                M('Menu')->where(array(                    'url' => 'Finance/mycz',                    'pid' => array('neq', 0)                ))->save(array('title' => '人民币充值', 'pid' => 4, 'sort' => 2, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            }            $list = M('Menu')->where(array(                'url' => 'Finance/myczType',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else if (!$list) {                M('Menu')->add(array('url' => 'Finance/myczType', 'title' => '人民币充值方式', 'pid' => 4, 'sort' => 3, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            } else {                M('Menu')->where(array(                    'url' => 'Finance/myczType',                    'pid' => array('neq', 0)                ))->save(array('title' => '人民币充值方式', 'pid' => 4, 'sort' => 3, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            }            $list = M('Menu')->where(array(                'url' => 'Finance/mytx',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else if (!$list) {                M('Menu')->add(array('url' => 'Finance/mytx', 'title' => '人民币提现', 'pid' => 4, 'sort' => 4, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            } else {                M('Menu')->where(array(                    'url' => 'Finance/mytx',                    'pid' => array('neq', 0)                ))->save(array('title' => '人民币提现', 'pid' => 4, 'sort' => 4, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            }            $list = M('Menu')->where(array(                'url' => 'Finance/mytxConfig',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else if (!$list) {                M('Menu')->add(array('url' => 'Finance/mytxConfig', 'title' => '人民币提现配置', 'pid' => 4, 'sort' => 5, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            } else {                M('Menu')->where(array(                    'url' => 'Finance/mytxConfig',                    'pid' => array('neq', 0)                ))->save(array('title' => '人民币提现配置', 'pid' => 4, 'sort' => 5, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            }            $list = M('Menu')->where(array(                'url' => 'Finance/myzr',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else if (!$list) {                M('Menu')->add(array('url' => 'Finance/myzr', 'title' => '虚拟币转入', 'pid' => 4, 'sort' => 6, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            } else {                M('Menu')->where(array(                    'url' => 'Finance/myzr',                    'pid' => array('neq', 0)                ))->save(array('title' => '虚拟币转入', 'pid' => 4, 'sort' => 6, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            }            $list = M('Menu')->where(array(                'url' => 'Finance/myzc',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else if (!$list) {                M('Menu')->add(array('url' => 'Finance/myzc', 'title' => '虚拟币转出', 'pid' => 4, 'sort' => 7, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            } else {                M('Menu')->where(array(                    'url' => 'Finance/myzc',                    'pid' => array('neq', 0)                ))->save(array('title' => '虚拟币转出', 'pid' => 4, 'sort' => 7, 'hide' => 0, 'group' => '财务', 'ico_name' => 'th-list'));            }            $list = M('Menu')->where(array(                'url' => 'Finance/myczStatus',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/mycz',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/myczStatus', 'title' => '修改状态', 'pid' => $pid, 'sort' => 100, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/myczStatus',                        'pid' => array('neq', 0)                    ))->save(array('title' => '修改状态', 'pid' => $pid, 'sort' => 100, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/myczQueren',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/mycz',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/myczQueren', 'title' => '确认到账', 'pid' => $pid, 'sort' => 100, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/myczQueren',                        'pid' => array('neq', 0)                    ))->save(array('title' => '确认到账', 'pid' => $pid, 'sort' => 100, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/myczTypeEdit',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/myczType',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/myczTypeEdit', 'title' => '编辑添加', 'pid' => $pid, 'sort' => 1, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/myczTypeEdit',                        'pid' => array('neq', 0)                    ))->save(array('title' => '编辑添加', 'pid' => $pid, 'sort' => 1, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/myczTypeStatus',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/myczType',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/myczTypeStatus', 'title' => '状态修改', 'pid' => $pid, 'sort' => 2, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/myczTypeStatus',                        'pid' => array('neq', 0)                    ))->save(array('title' => '状态修改', 'pid' => $pid, 'sort' => 2, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/myczTypeImage',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/myczType',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/myczTypeImage', 'title' => '上传图片', 'pid' => $pid, 'sort' => 2, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/myczTypeImage',                        'pid' => array('neq', 0)                    ))->save(array('title' => '上传图片', 'pid' => $pid, 'sort' => 2, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/mytxStatus',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/mytx',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/mytxStatus', 'title' => '修改状态', 'pid' => $pid, 'sort' => 2, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/mytxStatus',                        'pid' => array('neq', 0)                    ))->save(array('title' => '修改状态', 'pid' => $pid, 'sort' => 2, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/mytxExcel',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/mytx',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/mytxExcel', 'title' => '导出选中', 'pid' => $pid, 'sort' => 3, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/mytxExcel',                        'pid' => array('neq', 0)                    ))->save(array('title' => '导出选中', 'pid' => $pid, 'sort' => 3, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/mytxChuli',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/mytx',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/mytxChuli', 'title' => '正在处理', 'pid' => $pid, 'sort' => 4, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/mytxChuli',                        'pid' => array('neq', 0)                    ))->save(array('title' => '正在处理', 'pid' => $pid, 'sort' => 4, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/mytxChexiao',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/mytx',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/mytxChexiao', 'title' => '撤销提现', 'pid' => $pid, 'sort' => 5, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/mytxChexiao',                        'pid' => array('neq', 0)                    ))->save(array('title' => '撤销提现', 'pid' => $pid, 'sort' => 5, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/mytxQueren',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/mytx',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/mytxQueren', 'title' => '确认提现', 'pid' => $pid, 'sort' => 6, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/mytxQueren',                        'pid' => array('neq', 0)                    ))->save(array('title' => '确认提现', 'pid' => $pid, 'sort' => 6, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            $list = M('Menu')->where(array(                'url' => 'Finance/myzcQueren',                'pid' => array('neq', 0)            ))->select();            if ($list[1]) {                M('Menu')->where(array('id' => $list[1]['id']))->delete();            } else {                $pid = M('Menu')->where(array(                    'url' => 'Finance/myzc',                    'pid' => array('neq', 0)                ))->getField('id');                if (!$list) {                    M('Menu')->add(array('url' => 'Finance/myzcQueren', 'title' => '确认转出', 'pid' => $pid, 'sort' => 6, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                } else {                    M('Menu')->where(array(                        'url' => 'Finance/myzcQueren',                        'pid' => array('neq', 0)                    ))->save(array('title' => '确认转出', 'pid' => $pid, 'sort' => 6, 'hide' => 1, 'group' => '财务', 'ico_name' => 'home'));                }            }            if (M('Menu')->where(array('url' => 'Mycz/index'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            if (M('Menu')->where(array('url' => 'Mycztype/index'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            if (M('Menu')->where(array('url' => 'Mycz/type'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            if (M('Menu')->where(array('url' => 'Mycz/invit'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            if (M('Menu')->where(array('url' => 'Mycz/config'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            if (M('Menu')->where(array('url' => 'Mytx/index'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            if (M('Menu')->where(array('url' => 'Config/mytx'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            if (M('Menu')->where(array('url' => 'Myzc/index'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            if (M('Menu')->where(array('url' => 'Myzr/index'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            if (M('Menu')->where(array('url' => 'Config/mycz'))->delete()) {                M('AuthRule')->where(array('status' => 1))->delete();            }            S(MODULE_NAME . CONTROLLER_NAME . 'check', 1);        }    }}?>